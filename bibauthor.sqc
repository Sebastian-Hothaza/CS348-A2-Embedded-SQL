#include <stdio.h>
#include <stdbool.h>
#include "util.h"

EXEC SQL INCLUDE SQLCA; 

EXEC SQL BEGIN DECLARE SECTION;
	char a_name[23];
	char name[23];
    char pubid[11];
    char title[71];
    char publisher[51];
    char appearsin[11];
    char type[12];
    sqlint32 year;
    sqlint32 volume;
    sqlint32 number;
	sqlint32 startpage;
	sqlint32 endpage;
EXEC SQL END DECLARE SECTION;


void print_authors() {
    EXEC SQL DECLARE C2 CURSOR FOR
        select RTRIM(a.name)
        from author a, wrote w
        where w.pubid = :pubid
            and a.aid = w.aid
        order by w.aorder;
    EXEC SQL OPEN C2;

    EXEC SQL FETCH C2 INTO :name;    
    printf("Authors: %s", name);

    EXEC SQL FETCH C2 INTO :name;
    while(SQLCODE != 100){
        printf(", %s", name);
        EXEC SQL FETCH C2 INTO :name;
    }
    EXEC SQL CLOSE C2;
    printf("\n");
}

void print_proceedings() {
    printf("Year: %d\n", year);
}

void print_book() {
    EXEC SQL
        select b.publisher INTO :publisher
        from book b
        where b.pubid = :pubid;
    
    print_authors();
    printf("Publishher: %s\n", publisher);
    printf("Year: %d\n", year);
}

void print_journal() {
    EXEC SQL
        select j.volume, j.number INTO :volume, :number
        from journal j
        where j.pubid = :pubid;

    printf("Volume: %d\n", volume);
    printf("Number: %d\n", number);
    printf("Year: %d\n", year);
}

void print_article() {
    EXEC SQL
        select art.appearsin, art.startpage, art.endpage INTO :appearsin, :startpage, :endpage
        from article art
        where art.pubid = :pubid;

    print_authors();
    printf("In: %s\n", appearsin);
    printf("Pages: %d--%d\n", startpage, endpage);
}

void print_pub() {
    EXEC SQL
        select p.title INTO :title
        from publication p
        where p.pubid = :pubid;
    
    printf("Title: %s\n", title);

    if(strcmp(type, "proceedings") == 0)
        print_proceedings();
    else if(strcmp(type, "book") == 0)
        print_book();
    else if(strcmp(type, "journal") == 0)
        print_journal();
    else
        print_article();

    printf("\n");
}

void get_pubids() {
    EXEC SQL DECLARE C1 CURSOR FOR
        with
        author_pubids(name, pubid, title) as (
            select a.name, p.pubid, p.title
            from author a, wrote w, publication p
            where a.aid = w.aid
                    and a.name = :a_name
                    and w.pubid = p.pubid
        ),
        a_books(pubid, year, type, name) as (
            select b.pubid, b.year, 'book' as type, a.name
            from author_pubids ap, book b, author a, wrote w
            where ap.pubid = b.pubid
                    and w.pubid = b.pubid
                    and w.aid = a.aid
                    and w.aorder = 1
        ),
        a_articles(pubid, appearsin, type, name) as (
            select art.pubid, art.appearsin, 'article' as type, a.name
            from author_pubids ap, article art, author a, wrote w
            where ap.pubid = art.pubid
                    and w.pubid = art.pubid
                    and w.aid = a.aid
                    and w.aorder = 1
        ),
        a_articles_in(pubid, year, type, name) as (
            select pro.pubid, pro.year, 'proceedings' as type, '' as name
            from a_articles art, proceedings pro
            where art.appearsin = pro.pubid
            union
            select j.pubid, j.year, 'journal' as type, '' as name
            from a_articles art, journal j
            where art.appearsin = j.pubid
        ),
        a_article_years(pubid, year, type, name) as (
            select art.pubid, pro.year, 'article' as type, art.name
            from a_articles art, proceedings pro
            where art.appearsin = pro.pubid
            union
            select art.pubid, j.year, 'article' as type, art.name
            from a_articles art, journal j
            where art.appearsin = j.pubid
        )
        select *
        from a_article_years
        union
        select *
        from a_articles_in
        union
        select *
        from a_books
        order by year desc, name asc;

    EXEC SQL OPEN C1;

    EXEC SQL FETCH C1 INTO :pubid, :year, :type;
    while(SQLCODE != 100){
        printf("Pubid: %s\n", pubid);
        printf("Type: %s\n", type);
        print_pub();
        EXEC SQL FETCH C1 INTO :pubid, :year, :type;
    }
    EXEC SQL CLOSE C1;	
}

int main(int argc, char *argv[]) {
   char * getpass();

   EXEC SQL BEGIN DECLARE SECTION;
      char db[6] = "cs348";
   EXEC SQL END DECLARE SECTION;
   EXEC SQL WHENEVER SQLERROR  GO TO error;
   EXEC SQL CONNECT TO :db;

   strcpy(a_name, argv[1]);
   get_pubids();

   EXEC SQL COMMIT;
   EXEC SQL CONNECT reset;
   exit(0);

error:
   check_error("My error",&sqlca);
   EXEC SQL WHENEVER SQLERROR CONTINUE;

   EXEC SQL ROLLBACK;
   EXEC SQL CONNECT reset;
   exit(1);
}
